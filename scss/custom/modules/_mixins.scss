@mixin font-smoothing {
	-webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin font-smoothing-none {
	-webkit-font-smoothing: auto;
  -moz-osx-font-smoothing: auto;
}

@mixin transition($transitions...) {
	-webkit-transition: $transitions;
    -moz-transition: $transitions;
    -ms-transition: $transitions;
    -o-transition: $transitions;
    transition: $transitions;
}

@mixin transitionDelay($delay) {
	-webkit-transition-delay: $delay;
	-moz-transition-delay: $delay;
	-o-transition-delay: $delay;
	transition-delay: $delay;
}

@mixin transitionDuration($durations) {
	-webkit-transition-duration: $durations;
	-moz-transition-duration: $durations;
	-o-transition-duration: $durations;
	transition-duration: $durations;
}

@mixin transitionProperty($property) {
	-webkit-transition-property: $property;
	-moz-transition-property: $property;
	-o-transition-property: $property;
	transition-property: $property;
}

@mixin transitionTimingFunction($values) {
	-webkit-transition-timing-function: $values;
	-moz-transition-timing-function: $values;
	-o-transition-timing-function: $values;
	transition-timing-function: $values;
}

/* this mixin makes possible to add transition to a specific vendor, example: */
/* -webkit-transition: -webkit-transform 0.5s linear; */
@mixin transitionPrefix($property, $values) {
	-webkit-transition: -webkit-#{$property} #{$values};
    -moz-transition: -moz-#{$property} #{$values};
    -ms-transition: -ms-#{$property} #{$values};
    -o-transition: -o-#{$property} #{$values};
    transition: #{$property} #{$values};
}

@mixin background-gradient($from, $to) {
	background: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, $from), color-stop(100%,  $to));
	background: -webkit-linear-gradient($from, $to);
	background: -moz-linear-gradient($from, $to);
	background: -o-linear-gradient($from, $to);
	background: linear-gradient($from, $to);
}

@mixin transform($transforms) {
	-moz-transform: $transforms;
	-o-transform: $transforms;
	-ms-transform: $transforms;
	-webkit-transform: $transforms;
	transform: $transforms;
}

@mixin transformOrigin($transformOrigins) {
	-moz-transform-origin: $transformOrigins;
	-o-transform-origin: $transformOrigins;
	-ms-transform-origin: $transformOrigins;
	-webkit-transform-origin: $transformOrigins;
	transform-origin: $transformOrigins;
}

@mixin placeholder {
  &::-webkit-input-placeholder {@content}
  &:-moz-placeholder           {@content}
  &::-moz-placeholder          {@content}
  &:-ms-input-placeholder      {@content}
}

@mixin animation($animations) {
	-webkit-animation: $animations;
	-moz-animation: $animations;
	-o-animation: $animations;
	-ms-animation: $animations;
	animation: $animations;
}

@mixin animationDuration($value) {
	-webkit-animation-duration: $value;
	-moz-animation-duration: $value;
	-o-animation-duration: $value;
	-ms-animation-duration: $value;
	animation-duration: $value;
}

@mixin animationDelay($value) {
	-webkit-animation-delay: $value;
	-moz-animation-delay: $value;
	-o-animation-delay: $value;
	-ms-animation-delay: $value;
	animation-delay: $value;
}

@mixin animationTimingFunction($value) {
	-webkit-animation-timing-function: $value;
	-moz-animation-timing-function: $value;
	-o-animation-timing-function: $value;
	-ms-animation-timing-function: $value;
	animation-timing-function: $value;
}

@mixin keyFrame($name) {
	@-webkit-keyframes #{$name}{
		@content
	}
	@-moz-keyframes #{$name}{
		@content
	}
	@-o-keyframes #{$name}{
		@content
	}
	@keyframes #{$name}{
		@content
	}
}


/* Added by MWENDER */
@mixin button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;
  &:focus, &.focus {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 25%);
  }
  &:hover {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 12%);
  }
  &:active, &.active, .open > &.dropdown-toggle {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 12%);

    &:hover, &:focus, &.focus {
      color: $color;
      background-color: darken($background, 17%);
      border-color: darken($border, 25%);
    }
  }
  &:active, &.active, .open > &.dropdown-toggle {
    background-image: none;
  }
  &.disabled, &[disabled], fieldset[disabled] & {
    &, &:hover, &:focus, &.focus, &:active, &.active {
      background-color: $background;
      border-color: $border;
    }
  }
  .badge {
    color: $background;
    background-color: $color;
  }
}

@mixin gradient-triad-blues{
  background: #00aaec; /* Old browsers */
  background: -moz-linear-gradient(-45deg,  #00aaec 0%, #2b3695 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, right bottom, color-stop(0%,#00aaec), color-stop(100%,#2b3695)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(-45deg,  #00aaec 0%,#2b3695 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(-45deg,  #00aaec 0%,#2b3695 100%); /* Opera 11.10+ */
  background: -ms-linear-gradient(-45deg,  #00aaec 0%,#2b3695 100%); /* IE10+ */
  background: linear-gradient(135deg,  #00aaec 0%,#2b3695 100%); /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00aaec', endColorstr='#2b3695',GradientType=1 ); /* IE6-9 fallback on horizontal gradient */
}

// Mixin to create a bootstrap button with custom colors
@mixin bootstrap-button($background) {
  $color: #fff;
  $border: 5%;
  @if (lightness($background) >= lightness(#aaa)) {
    $color: #333;
    $border: .2 * lightness($background);
  }
  @include button-variant($color, $background, darken($background, $border));
}